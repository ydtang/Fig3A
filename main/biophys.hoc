load_file("../_classlib/TString.hoc")
load_file("../_classlib/TPointList.hoc")
objref imp
objref iondenstity
objref ConIh,ConIh1,dis,dis1
func get_Rin(){local x
	x = $1
	imp = new Impedance(x)
	imp.loc(x)
	imp.compute(0)
	return imp.input(x)
}

proc biophys(){
	celsius = 35
	forall cm =0.45
	forall Ra =100//100
	//segment at least every 30 Î¼m	
	forsec apical nseg = 1 + 2*int(L/30) 
	active_properties()
}

proc active_properties() {
	iondenstity=new TPointList()
	ConIh1=new Vector()
	dis1=new Vector()
	ConIh=new File()
	dis=new File()
	ConIh.wopen("Conih.dat")	
	dis.wopen("distanceIh.dat")	

	Rm =37//37
	forall insert pas
	forall g_pas = 1/Rm/1000
	forall e_pas = -74
	forall {insert hd}
	forall {ehd_hd=-25}
	forall {insert calH gcalbar_calH=1e-4}
	forall {insert namr gnabar_namr=1e-3}
	forsec as{
		//remove the passive properties from soma and axon
		g_pas = 0		
		insert traub
		gNabar_traub =0.1//.1 //enhance AP increase 
		gKbar_traub =  .015 *3//enhance AP decrease
		gLbar_traub =  1/Rm/1000  	
		eL_traub = -74//increase rest potentials,but too small	
		eK_traub = -80			
		eNa_traub = 90 			

	}
	forall if(ismembrane("traub")) v_shft_traub =50 
	h_density()
}

proc h_density() {
	soma distance()
	forall {
		dis1.append(distance(0.5))
		if(ismembrane("hd")) {			
			for (x) if (x>0 && x<1) {
				xdist1 = distance(x)
				xdist=xdist1
				if (xdist>500) {xdist=500}
				ifsec basal xdist = 0
				con=ihmax*(1+1.7*xdist/100)
				ghdbar_hd(x) =con
				iondenstity.append(x)
				//sprint("OUTPUT/Conih.dat",%f,xdist)
				//ifsec as {xdist1 = 500 con=1.2e-5*(1+1.2*xdist1/100)}
				if (xdist<1e5){
					ConIh1.append(con)
					//dis1.append(xdist1)
				} 
				//print "ghdbar_hd(x)= ",secname(),x,ghdbar_hd(x)
			}
		}
	}
	ConIh1.printf(ConIh)
	dis1.printf(dis)
	ConIh.close()
	dis.close()
}

